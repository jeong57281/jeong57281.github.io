{"version":3,"file":"component---src-pages-index-jsx-56e9aa22c89519efd012.js","mappings":"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","sources":["webpack://jeong57281.github.io/./src/components/post-item.jsx","webpack://jeong57281.github.io/./src/assets/styles/components/post-item.module.scss","webpack://jeong57281.github.io/./src/assets/styles/pages/index.module.scss","webpack://jeong57281.github.io/./src/pages/index.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport { ThemeContext } from \"contexts/theme\";\r\nimport * as style from \"assets/styles/components/post-item.module.scss\";\r\n\r\nconst PostItem = ({ tag, node }) => {\r\n  const { titleImage, title, date } = node.frontmatter;\r\n  const slug = node.fields.slug;\r\n  const excerpt = node.excerpt;\r\n  // dark mode\r\n  const { theme } = useContext(ThemeContext);\r\n  return (\r\n    <Link\r\n      className={!theme ? style.postItem : style.postItemDark}\r\n      to={!tag ? slug : `${slug}?tag=${encodeURI(tag)}`}\r\n    >\r\n      <div className={style.image}>\r\n        <div className={style.ratio}>\r\n          <img src={titleImage}/>\r\n        </div>\r\n      </div>\r\n      <div className={style.info}>\r\n        <div className={style.text}>\r\n          <h2>{title}</h2>\r\n          <i>{`Posted on ${date}`}</i>\r\n          <p>{excerpt}</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default PostItem;","// extracted by mini-css-extract-plugin\nexport var fadeIn = \"post-item-module--fade-in---jNnY\";\nexport var fadeOut = \"post-item-module--fade-out--c+aCn\";\nexport var image = \"post-item-module--image--rkAqd\";\nexport var info = \"post-item-module--info--x1Zs+\";\nexport var postItem = \"post-item-module--post-item--Q9cxB\";\nexport var postItemDark = \"post-item-module--post-item-dark--4rUsN\";\nexport var ratio = \"post-item-module--ratio--1qxWO\";\nexport var slideInRight = \"post-item-module--slide-in-right--hx-FB\";\nexport var slideOutRight = \"post-item-module--slide-out-right--rLp8F\";\nexport var text = \"post-item-module--text--fbXlY\";","// extracted by mini-css-extract-plugin\nexport var active = \"index-module--active--wJCjh\";\nexport var article = \"index-module--article--woiWJ\";\nexport var aside = \"index-module--aside--7Q89J\";\nexport var blog = \"index-module--blog--nNXqZ\";\nexport var blogDark = \"index-module--blog-dark--4m3Jj\";\nexport var disabled = \"index-module--disabled--7+UC0\";\nexport var fadeIn = \"index-module--fade-in--ySEbP\";\nexport var fadeOut = \"index-module--fade-out--xwEzG\";\nexport var mPagination = \"index-module--m-pagination--ZZJio\";\nexport var pagination = \"index-module--pagination--4kTLN\";\nexport var postList = \"index-module--post-list--0jizV\";\nexport var slideInRight = \"index-module--slide-in-right--mDdsl\";\nexport var slideOutRight = \"index-module--slide-out-right--emFPr\";\nexport var tag = \"index-module--tag--CPiTn\";\nexport var tagList = \"index-module--tag-list--dzMs3\";","import React, { useContext } from \"react\";\r\nimport { Link, graphql } from \"gatsby\";\r\nimport { ThemeContext } from \"contexts/theme\";\r\nimport * as style from \"assets/styles/pages/index.module.scss\";\r\nimport ContentLayout from \"layouts/content-layout\";\r\nimport PostItem from \"components/post-item\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst Index = ({ location, data }) => {\r\n  // get markdown data\r\n  const { group, nodes } = data.allMarkdownRemark;\r\n  // parse query string\r\n  const params = new URLSearchParams(location.search);\r\n  const tag = params.get('tag') || '';\r\n  // scroll top func\r\n  const scrollTop = () => {\r\n    const scroll = document.querySelector('#scroll');\r\n    if(scroll) scroll.scrollTo(0, 0);\r\n  }\r\n  // pagination\r\n  const POST_PER_PAGE = data.site.siteMetadata.postPerPage;\r\n  let posts = !tag ? nodes : nodes.filter(node => node.frontmatter.tags.includes(tag));\r\n  let page = 1;\r\n  const curPage = parseInt(params.get('page'));\r\n  const maxPage = Math.ceil(posts.length/POST_PER_PAGE);\r\n  if(1 <= curPage && curPage <= maxPage) page = curPage;\r\n  const MPagination = () => {\r\n    return (\r\n      <div className={style.mPagination}>\r\n        <button className={page === 1 ? style.disabled : ''}>\r\n          <Link to={`/?${tag ? `tag=${encodeURI(tag)}&` : ''}page=${page-1}`}>\r\n            prev\r\n          </Link>\r\n        </button>\r\n        <button className={page === maxPage ? style.disabled : ''}>\r\n          <Link to={`/?${tag ? `tag=${encodeURI(tag)}&` : ''}page=${page+1}`}>\r\n            next \r\n          </Link>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  const Pagination = () => {\r\n    const around = [];\r\n    if(1 <= page-2) around.push(page-2);\r\n    if(1 <= page-1) around.push(page-1);\r\n    around.push(page);\r\n    if(page+1 <= maxPage) around.push(page+1);\r\n    if(page+2 <= maxPage) around.push(page+2);\r\n    return (\r\n      <div className={style.pagination}>\r\n        <ul>\r\n          { !around.includes(1) &&\r\n            <>\r\n              <li>\r\n                <Link\r\n                  to={!tag ? `/?page=${1}` : `/?tag=${encodeURI(tag)}&page=${1}`}\r\n                  className={1 === page ? style.active : ''}\r\n                  onClick={scrollTop}\r\n                >\r\n                  1\r\n                </Link>\r\n              </li>\r\n              { around[0] !== 2 &&\r\n                <li>\r\n                  <p>...</p>\r\n                </li>\r\n              }\r\n            </>\r\n          }\r\n          {around.map((el, idx) => (\r\n            <li key={idx}>\r\n              <Link\r\n                to={!tag ? `/?page=${el}` : `/?tag=${encodeURI(tag)}&page=${el}`}\r\n                className={el === page ? style.active : ''}\r\n                onClick={scrollTop}\r\n              >\r\n                {el}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n          { (maxPage && !around.includes(maxPage)) &&\r\n            <>\r\n              { around[around.length-1] !== maxPage-1 &&\r\n                <li>\r\n                  <p>...</p>\r\n                </li>\r\n              }\r\n              <li>\r\n                <Link\r\n                  to={!tag ? `/?page=${maxPage}` : `/?tag=${encodeURI(tag)}&page=${maxPage}`}\r\n                  className={maxPage === page ? style.active : ''}\r\n                  onClick={scrollTop}\r\n                >\r\n                  {maxPage}\r\n                </Link>\r\n              </li>\r\n            </>\r\n          }\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n  posts = posts.slice((page-1)*POST_PER_PAGE, page*POST_PER_PAGE);\r\n  // dark mode\r\n  const { theme } = useContext(ThemeContext);\r\n  // for title\r\n  const { nickname } = data.site.siteMetadata;\r\n  return (\r\n    <section className={!theme ? style.blog : style.blogDark}>\r\n      <Helmet title={`${nickname}'s blog`}/>\r\n      <aside className={style.aside}>\r\n        <div className={style.tag}>\r\n          <ul className={style.tagList}>\r\n            <li>\r\n              <Link\r\n                to='/'\r\n                className={!tag ? style.active : ''}\r\n                onClick={scrollTop}\r\n              >\r\n                All\r\n              </Link>\r\n            </li>\r\n            {group.map((el, idx) => {\r\n              return(\r\n                <li key={idx}>\r\n                  { el.tags && \r\n                    <Link\r\n                      to={`/?tag=${encodeURI(el.tags)}`}\r\n                      className={tag === el.tags ? style.active : ''}\r\n                      onClick={scrollTop}\r\n                    >\r\n                      {`#${el.tags}`}\r\n                    </Link>\r\n                  }\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </aside>\r\n      <article className={style.article}>\r\n        <ContentLayout data={data}>\r\n          <ul className={style.postList}>\r\n            {posts.map((node, idx) => {\r\n              return (\r\n                <li key={idx}>\r\n                  <PostItem tag={tag} node={node}/>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          <Pagination/>\r\n          <MPagination/>\r\n        </ContentLayout>\r\n      </article>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        nickname\r\n        postPerPage\r\n        github\r\n        instagram\r\n        gmail\r\n        blog\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\r\n      group(field: frontmatter___tags) {\r\n        tags: fieldValue\r\n        totalCount\r\n      }\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date\r\n          title\r\n          titleImage\r\n          tags\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Index;"],"names":["tag","node","frontmatter","titleImage","title","date","slug","fields","excerpt","theme","useContext","ThemeContext","className","to","encodeURI","src","active","disabled","location","data","allMarkdownRemark","group","nodes","params","URLSearchParams","search","get","scrollTop","scroll","document","querySelector","scrollTo","POST_PER_PAGE","site","siteMetadata","postPerPage","posts","filter","tags","includes","page","curPage","parseInt","maxPage","Math","ceil","length","MPagination","style","Pagination","around","push","onClick","map","el","idx","key","slice","nickname"],"sourceRoot":""}