{"version":3,"file":"component---src-pages-index-jsx-1c9c1156fa91d2385dc8.js","mappings":"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","sources":["webpack://jeong57281.github.io/./src/assets/styles/pages/index.module.scss","webpack://jeong57281.github.io/./src/pages/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var active = \"index-module--active--wJCjh\";\nexport var blog = \"index-module--blog--nNXqZ\";\nexport var blogDark = \"index-module--blog-dark--4m3Jj\";\nexport var blogPostList = \"index-module--blog-post-list--TYUFn\";\nexport var blogTags = \"index-module--blog-tags--JT1tK\";\nexport var blogTagsList = \"index-module--blog-tags-list--vHVL-\";\nexport var disabled = \"index-module--disabled--7+UC0\";\nexport var fadeIn = \"index-module--fade-in--ySEbP\";\nexport var fadeOut = \"index-module--fade-out--xwEzG\";\nexport var mPagination = \"index-module--m-pagination--ZZJio\";\nexport var pagination = \"index-module--pagination--4kTLN\";\nexport var postImage = \"index-module--post-image--9eKaL\";\nexport var postInfo = \"index-module--post-info--tP39H\";\nexport var ratio = \"index-module--ratio--O0A4K\";\nexport var slideInRight = \"index-module--slide-in-right--mDdsl\";\nexport var slideOutRight = \"index-module--slide-out-right--emFPr\";","import React, { useContext } from \"react\";\r\nimport { Link, graphql } from \"gatsby\";\r\nimport { ThemeContext } from \"contexts/theme\";\r\nimport * as style from \"assets/styles/pages/index.module.scss\";\r\nimport Footer from \"components/footer\";\r\nimport SideLayout from \"layouts/side-layout\";\r\nimport ContentLayout from \"layouts/content-layout\";\r\nimport VerticalLayout from \"layouts/vertical-layout\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst Index = ({ location, data }) => {\r\n  // get markdown data\r\n  const { group, nodes } = data.allMarkdownRemark;\r\n  // parse query string\r\n  const params = new URLSearchParams(location.search);\r\n  const tag = params.get('tag') || '';\r\n  // scroll top func\r\n  const scrollTop = () => {\r\n    const scroll = document.querySelector('#scroll');\r\n    if(scroll) scroll.scrollTo(0, 0);\r\n  }\r\n  // pagination\r\n  const POST_PER_PAGE = data.site.siteMetadata.postPerPage;\r\n  let posts = !tag ? nodes : nodes.filter(node => node.frontmatter.tags.includes(tag));\r\n  let page = 1;\r\n  const curPage = parseInt(params.get('page'));\r\n  const maxPage = Math.ceil(posts.length/POST_PER_PAGE);\r\n  if(1 <= curPage && curPage <= maxPage) page = curPage;\r\n  const MPagination = () => {\r\n    return (\r\n      <div className={style.mPagination}>\r\n        <button className={page === 1 ? style.disabled : ''}>\r\n          <Link to={`/?${tag ? `tag=${encodeURI(tag)}&` : ''}page=${page-1}`}>\r\n            prev\r\n          </Link>\r\n        </button>\r\n        <button className={page === maxPage ? style.disabled : ''}>\r\n          <Link to={`/?${tag ? `tag=${encodeURI(tag)}&` : ''}page=${page+1}`}>\r\n            next \r\n          </Link>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  const Pagination = () => {\r\n    const around = [];\r\n    if(1 <= page-2) around.push(page-2);\r\n    if(1 <= page-1) around.push(page-1);\r\n    around.push(page);\r\n    if(page+1 <= maxPage) around.push(page+1);\r\n    if(page+2 <= maxPage) around.push(page+2);\r\n    return (\r\n      <div className={style.pagination}>\r\n        <ul>\r\n          { !around.includes(1) &&\r\n            <>\r\n              <li>\r\n                <Link\r\n                  to={!tag ? `/?page=${1}` : `/?tag=${encodeURI(tag)}&page=${1}`}\r\n                  className={1 === page ? style.active : ''}\r\n                  onClick={scrollTop}\r\n                >\r\n                  1\r\n                </Link>\r\n              </li>\r\n              { around[0] !== 2 &&\r\n                <li>\r\n                  <p>...</p>\r\n                </li>\r\n              }\r\n            </>\r\n          }\r\n          {around.map((el, idx) => (\r\n            <li key={idx}>\r\n              <Link\r\n                to={!tag ? `/?page=${el}` : `/?tag=${encodeURI(tag)}&page=${el}`}\r\n                className={el === page ? style.active : ''}\r\n                onClick={scrollTop}\r\n              >\r\n                {el}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n          { (maxPage && !around.includes(maxPage)) &&\r\n            <>\r\n              { around[around.length-1] !== maxPage-1 &&\r\n                <li>\r\n                  <p>...</p>\r\n                </li>\r\n              }\r\n              <li>\r\n                <Link\r\n                  to={!tag ? `/?page=${maxPage}` : `/?tag=${encodeURI(tag)}&page=${maxPage}`}\r\n                  className={maxPage === page ? style.active : ''}\r\n                  onClick={scrollTop}\r\n                >\r\n                  {maxPage}\r\n                </Link>\r\n              </li>\r\n            </>\r\n          }\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n  posts = posts.slice((page-1)*POST_PER_PAGE, page*POST_PER_PAGE);\r\n  // dark mode\r\n  const { theme } = useContext(ThemeContext);\r\n  // for title\r\n  const { nickname } = data.site.siteMetadata;\r\n  return (\r\n    <div className={!theme ? style.blog : style.blogDark}>\r\n      <Helmet title={`${nickname}'s blog`}/>\r\n      <SideLayout\r\n        aside={\r\n          <div className={style.blogTags}>\r\n            <ul className={style.blogTagsList}>\r\n              <li>\r\n                <Link\r\n                  to='/'\r\n                  className={!tag ? style.active : ''}\r\n                  onClick={scrollTop}\r\n                >\r\n                  All\r\n                </Link>\r\n              </li>\r\n              {group.map((el, idx) => {\r\n                return(\r\n                  <li key={idx}>\r\n                    { el.tags && \r\n                      <Link\r\n                        to={`/?tag=${encodeURI(el.tags)}`}\r\n                        className={tag === el.tags ? style.active : ''}\r\n                        onClick={scrollTop}\r\n                      >\r\n                        {`#${el.tags}`}\r\n                      </Link>\r\n                    }\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        }\r\n        section={\r\n          <VerticalLayout>\r\n            <ContentLayout>\r\n              <ul className={style.blogPostList}>\r\n                {posts.map((el, idx) => {\r\n                  const { titleImage, title, date } = el.frontmatter;\r\n                  return (\r\n                    <li key={idx}>\r\n                      <Link to={!tag ? el.fields.slug : `${el.fields.slug}?tag=${encodeURI(tag)}`}>\r\n                        <div className={style.postImage}>\r\n                          <div className={style.ratio}>\r\n                            <img src={titleImage}/>\r\n                          </div>\r\n                        </div>\r\n                        <div className={style.postInfo}>\r\n                          <h2>{title}</h2>\r\n                          <i>{`Posted on ${date}`}</i>\r\n                          <p>{el.excerpt}</p>\r\n                        </div>\r\n                      </Link>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n              <Pagination/>\r\n              <MPagination/>\r\n            </ContentLayout>\r\n            <Footer data={data}/>\r\n          </VerticalLayout>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        nickname\r\n        postPerPage\r\n        github\r\n        instagram\r\n        gmail\r\n        blog\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\r\n      group(field: frontmatter___tags) {\r\n        tags: fieldValue\r\n        totalCount\r\n      }\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date\r\n          title\r\n          titleImage\r\n          tags\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Index;"],"names":["active","disabled","location","data","allMarkdownRemark","group","nodes","params","URLSearchParams","search","tag","get","scrollTop","scroll","document","querySelector","scrollTo","POST_PER_PAGE","site","siteMetadata","postPerPage","posts","filter","node","frontmatter","tags","includes","page","curPage","parseInt","maxPage","Math","ceil","length","MPagination","className","style","to","encodeURI","Pagination","around","push","onClick","map","el","idx","key","slice","theme","useContext","ThemeContext","nickname","title","aside","section","titleImage","date","fields","slug","src","excerpt"],"sourceRoot":""}