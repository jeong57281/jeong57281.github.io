{"version":3,"file":"component---src-templates-blog-post-jsx-8b488d98f5b0622361f2.js","mappings":"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","sources":["webpack://jeong57281.github.io/./src/components/post-item.jsx","webpack://jeong57281.github.io/./src/assets/styles/components/post-item.module.scss","webpack://jeong57281.github.io/./src/components/Utterances.jsx","webpack://jeong57281.github.io/./src/templates/blog-post.jsx","webpack://jeong57281.github.io/./src/assets/styles/pages/blog-post.module.scss"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport { ThemeContext } from \"contexts/theme\";\r\nimport * as style from \"assets/styles/components/post-item.module.scss\";\r\n\r\nconst PostItem = ({ tag, node }) => {\r\n  const { titleImage, title, date } = node.frontmatter;\r\n  const slug = node.fields.slug;\r\n  const excerpt = node.excerpt;\r\n  // dark mode\r\n  const { theme } = useContext(ThemeContext);\r\n  return (\r\n    <Link\r\n      className={!theme ? style.postItem : style.postItemDark}\r\n      to={!tag ? slug : `${slug}?tag=${encodeURI(tag)}`}\r\n    >\r\n      <div className={style.image}>\r\n        <div className={style.ratio}>\r\n          <img src={titleImage}/>\r\n        </div>\r\n      </div>\r\n      <div className={style.info}>\r\n        <div className={style.text}>\r\n          <h2>{title}</h2>\r\n          <i>{`Posted on ${date}`}</i>\r\n          <p>{excerpt}</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default PostItem;","// extracted by mini-css-extract-plugin\nexport var fadeIn = \"post-item-module--fade-in---jNnY\";\nexport var fadeOut = \"post-item-module--fade-out--c+aCn\";\nexport var image = \"post-item-module--image--rkAqd\";\nexport var info = \"post-item-module--info--x1Zs+\";\nexport var postItem = \"post-item-module--post-item--Q9cxB\";\nexport var postItemDark = \"post-item-module--post-item-dark--4rUsN\";\nexport var ratio = \"post-item-module--ratio--1qxWO\";\nexport var slideInRight = \"post-item-module--slide-in-right--hx-FB\";\nexport var slideOutRight = \"post-item-module--slide-out-right--rLp8F\";\nexport var text = \"post-item-module--text--fbXlY\";","import React, { createRef, useLayoutEffect } from 'react';\r\n\r\nconst src = 'https://utteranc.es/client.js';\r\n\r\nconst Utterances = React.memo(({ repo, theme }) => {\r\n  const containerRef = createRef();\r\n  useLayoutEffect(() => {\r\n    const utterances = document.createElement('script');\r\n    const attributes = {\r\n      src,\r\n      repo,\r\n      theme,\r\n      'issue-term': 'pathname',\r\n      label: 'Comments',\r\n      crossOrigin: 'anonymous',\r\n      async: 'true',\r\n    };\r\n    Object.entries(attributes).forEach(([key, value]) => {\r\n      utterances.setAttribute(key, value);\r\n    });\r\n    containerRef.current.appendChild(utterances);\r\n  }, [repo]);\r\n  return <div ref={containerRef} />;\r\n});\r\nUtterances.displayName = 'Utterances';\r\n\r\nexport default Utterances;","import React, { useContext } from \"react\";\r\nimport { Link, graphql } from \"gatsby\";\r\nimport { ThemeContext } from \"contexts/theme\";\r\nimport * as style from \"assets/styles/pages/blog-post.module.scss\";\r\nimport Toc from \"components/toc\";\r\nimport Utterances from \"components/Utterances\";\r\nimport get from \"lodash/get\";\r\nimport PostItem from \"components/post-item\";\r\nimport ContentLayout from \"layouts/content-layout\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst BlogPost = ({ location, data }) => {\r\n  // utterances\r\n  const _repo = get(data, 'site.siteMetadata.utterances.repo', false);\r\n  const _theme = get(data, 'site.siteMetadata.utterances.theme', false);\r\n  // parse query string\r\n  const params = new URLSearchParams(location.search);\r\n  const tag = params.get('tag') || '';\r\n  // other post\r\n  const { markdownRemark, allMarkdownRemark } = data;\r\n  const { nodes } = allMarkdownRemark;\r\n  const post = markdownRemark;\r\n  const postDataList = !tag ? nodes : nodes.filter(node => node.frontmatter.tags.includes(tag));\r\n  const postIndex = postDataList.findIndex(postData => postData.id === markdownRemark.id);\r\n  const prevNode = postIndex > 0 ? postDataList[postIndex-1] : undefined;\r\n  const nextNode = postIndex  < postDataList.length-1 ? postDataList[postIndex+1] : undefined;\r\n  // dark mode\r\n  const { theme } = useContext(ThemeContext);\r\n  // create title tag id\r\n  const titleId = markdownRemark.id.replaceAll(/[0-9\\-]/g, '');\r\n  return (\r\n    <section className={!theme ? style.post : style.postDark}>\r\n      <Helmet title={`${markdownRemark.frontmatter.title} - ${data.site.siteMetadata.nickname}'s blog`}/>\r\n      <aside className={style.aside}>\r\n        <div className={style.postToc}>\r\n          <Toc\r\n            html={post.tableOfContents}\r\n            title={markdownRemark.frontmatter.title}\r\n            titleId={titleId}\r\n          />\r\n        </div>\r\n      </aside>\r\n      <article className={style.article}>\r\n        <ContentLayout data={data}>\r\n          <div className={style.postWrap}>\r\n            <div className={style.postHead}>\r\n              <h1 id={titleId}>{markdownRemark.frontmatter.title}</h1>\r\n              <i>{`Posted on ${markdownRemark.frontmatter.date}`}</i>\r\n              <ul className={style.postTags}>\r\n                {markdownRemark.frontmatter.tags.map((el, idx) => (\r\n                  <li key={idx}>\r\n                    { el &&\r\n                      <Link to={`/?tag=${encodeURI(el)}`}>\r\n                        {`#${el}`}\r\n                      </Link>\r\n                    }\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n            <div\r\n              className={style.postBody}\r\n              dangerouslySetInnerHTML={{ __html: post.html }}\r\n            />\r\n          </div>\r\n          { (_repo && _theme) &&\r\n            <div className={style.postComment}>\r\n              <h1>Comments</h1>\r\n              <Utterances\r\n                repo={_repo}\r\n                theme={_theme}\r\n              />\r\n            </div>\r\n          }\r\n          { (prevNode || nextNode) &&\r\n            <div className={style.postFooter}>\r\n              <h1>\r\n                Other Posts\r\n                <span>{tag ? ` - #${tag}` : ' - All'}</span>\r\n              </h1>\r\n              <ul>\r\n                { prevNode &&\r\n                  <li>\r\n                    <PostItem tag={tag} node={prevNode}/>\r\n                  </li>\r\n                }\r\n                { nextNode &&\r\n                  <li>\r\n                    <PostItem tag={tag} node={nextNode}/>\r\n                  </li>\r\n                }\r\n              </ul>\r\n            </div>\r\n          }\r\n        </ContentLayout>\r\n      </article>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport const query = graphql`\r\n  query ($slug: String!){\r\n    site {\r\n      siteMetadata {\r\n        nickname\r\n        github\r\n        instagram\r\n        gmail\r\n        blog\r\n        utterances {\r\n          repo\r\n          theme\r\n        }\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      tableOfContents\r\n      frontmatter {\r\n        title\r\n        date\r\n        tags\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n      id\r\n    }\r\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\r\n      nodes {\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          title\r\n          tags\r\n          date\r\n          titleImage\r\n        }\r\n        excerpt\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default BlogPost;","// extracted by mini-css-extract-plugin\nexport var article = \"blog-post-module--article--RXIeB\";\nexport var aside = \"blog-post-module--aside--cgHj3\";\nexport var fadeIn = \"blog-post-module--fade-in--349B1\";\nexport var fadeOut = \"blog-post-module--fade-out--trhG0\";\nexport var post = \"blog-post-module--post--YL78N\";\nexport var postBody = \"blog-post-module--post-body--QZanD\";\nexport var postComment = \"blog-post-module--post-comment--nL+gW\";\nexport var postDark = \"blog-post-module--post-dark--y31lV\";\nexport var postFooter = \"blog-post-module--post-footer--PQWmq\";\nexport var postHead = \"blog-post-module--post-head--F0Bz4\";\nexport var postTags = \"blog-post-module--post-tags--i4dIF\";\nexport var postToc = \"blog-post-module--post-toc--4+MyS\";\nexport var postWrap = \"blog-post-module--post-wrap--+g4ZG\";\nexport var slideInRight = \"blog-post-module--slide-in-right--Oh3-Z\";\nexport var slideOutRight = \"blog-post-module--slide-out-right---p9X0\";"],"names":["tag","node","frontmatter","titleImage","title","date","slug","fields","excerpt","theme","useContext","ThemeContext","className","to","encodeURI","src","Utterances","React","repo","containerRef","createRef","useLayoutEffect","utterances","document","createElement","attributes","label","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","current","appendChild","ref","displayName","location","data","_repo","get","_theme","URLSearchParams","search","markdownRemark","nodes","allMarkdownRemark","post","postDataList","filter","tags","includes","postIndex","findIndex","postData","id","prevNode","undefined","nextNode","length","titleId","replaceAll","Helmet","site","siteMetadata","nickname","html","tableOfContents","map","el","idx","dangerouslySetInnerHTML","__html"],"sourceRoot":""}